<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单链表反转 on Qstudy的博客</title>
    <link>http://qstudy.tech/tags/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC/</link>
    <description>Recent content in 单链表反转 on Qstudy的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Apr 2019 14:54:59 +0000</lastBuildDate><atom:link href="http://qstudy.tech/tags/%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go实现单链表反转</title>
      <link>http://qstudy.tech/archives/157/</link>
      <pubDate>Wed, 24 Apr 2019 14:54:59 +0000</pubDate>
      
      <guid>http://qstudy.tech/archives/157/</guid>
      <description>单链表核心代码如下： 1.迭代方法： 1 2 3 4 5 6 7 8 func reverseList(node *ListNode) *ListNode { cur := node var pre *ListNode for cur != nil { cur.Next, pre, cur = pre, cur, cur.Next } return pre } 理解：cur指向当前节点，pre是前节点初始为nil，反转过程： 1 2 3 4 next := cur.next //新建一个临时节点用于保存cur.next，不然会丢失 cur.next = pre pre = cur cur = next 2.递归方式 1 2 3 4 5 6</description>
    </item>
    
  </channel>
</rss>
