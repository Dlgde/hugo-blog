<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>选择排序 on Dlgde的博客</title>
    <link>/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 选择排序 on Dlgde的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 22 Apr 2019 15:33:23 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go实现选择排序</title>
      <link>/archives/155/</link>
      <pubDate>Mon, 22 Apr 2019 15:33:23 +0000</pubDate>
      
      <guid>/archives/155/</guid>
      <description>&lt;h5 id=&#34;选择排序-对于给定的一组记录-经过第一轮比较之后得到最小记录-然后将该记录与第一个记录的位置进行交换-接着对对不包括第一个记录以外的其他记录进行第二轮比较-得到的最小记录与第二个记录进行位置交换-重复该过程-直到进行比较的记录只有一个为止&#34;&gt;&lt;strong&gt;选择排序：对于给定的一组记录，经过第一轮比较之后得到最小记录，然后将该记录与第一个记录的位置进行交换；接着对对不包括第一个记录以外的其他记录进行第二轮比较，得到的最小记录与第二个记录进行位置交换；重复该过程，直到进行比较的记录只有一个为止。&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;具体实现如下：&lt;/p&gt;

&lt;pre class=&#34;lang:default decode:true&#34;&gt;package main

import &#34;fmt&#34;

func SelectSort(data []int) {
    length := len(data)
    for i := 0; i &amp;lt; length; i++ {
        tmp := data[i]
        flag := i
        for j := i + 1; j &amp;lt; length; j++ {
            if data[j] &amp;lt; tmp {
                tmp = data[j]
                flag = j
            }
        }

        if flag != i {
            data[flag] = data[i]
            data[i] = tmp
        }
        fmt.Println(data) //为了看具体排序的过程

    }
}

func main() {
    data := []int{44, 38, 65, 97, 76, 14, 27, 48}
    SelectSort(data)
    fmt.Println(data)
}&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>