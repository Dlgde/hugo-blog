<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Qstudy的博客</title>
    <link>http://qstudy.tech/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Qstudy的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 05 Jun 2021 23:29:36 +0800</lastBuildDate><atom:link href="http://qstudy.tech/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>移除链表元素</title>
      <link>http://qstudy.tech/2021/06/05/</link>
      <pubDate>Sat, 05 Jun 2021 23:29:36 +0800</pubDate>
      
      <guid>http://qstudy.tech/2021/06/05/</guid>
      <description>题目: 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点，具体见链接 LeetCode-203 相关代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package main import &amp;#34;fmt&amp;#34; type ListNode struct { Val int Next *ListNode } //crete linklist func CreateNode(node *ListNode, max int) { cur := node for i := 1; i &amp;lt; max; i++ {</description>
    </item>
    
    <item>
      <title>Fibonacci</title>
      <link>http://qstudy.tech/post/fibonacci/</link>
      <pubDate>Sun, 04 Apr 2021 23:28:44 +0800</pubDate>
      
      <guid>http://qstudy.tech/post/fibonacci/</guid>
      <description>斐波那契数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 package main import &amp;#34;fmt&amp;#34; //动态规划 func fib(n int) int { if n &amp;lt; 2 { return n } nums := make([]int, n) nums[0], nums[1] = 1, 1 for i := 2; i &amp;lt; n; i++ { // nums[i] = (nums[i-1] + nums[i-2]) % 1000000007 nums[i] = nums[i-1] + nums[i-2] } return nums[n-1] } //递归 func fib01(n int) int { if n &amp;lt; 2 { return n } return fib01(n-1) + fib01(n-2) } func main() { var n int fmt.Scanln(&amp;amp;n) fmt.Println(fib(n)) fmt.Println(&amp;#34;the fib01 is &amp;#34;, fib01(n)) }</description>
    </item>
    
  </channel>
</rss>
